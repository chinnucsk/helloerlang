* 对于只读数据是从ets中取快,还是用mochiglobal 快
这里没用对 进程字典 的访问速度进行比较, 是想避免半进程消息堆积过多造成的瓶颈

(emacs@jf.org)4> test:test(10000).
ets use time:1475
mochiglobal use time:3833

(emacs@jf.org)9> test_big:test(10000).
ets use time:85151
mochiglobal use time:4042

似乎用mochiglobal 没有ets快
PS. mochiglobal 慢就慢在 key_to_module(K).函数上进行的各种转化

* mochiglobal的适用场合,存储的只读数据较大时,速度比ets快,
  原理是,ets需要进行进程间数据的copy,数据量越大,效率越低

http://www.cnblogs.com/me-sa/archive/2012/04/19/Erlang_Shared_Data_using_mochiglobal.html
http://stackoverflow.com/questions/6181463/speed-up-and-best-practices-using-ets-for-per-module-pre-computed-data
